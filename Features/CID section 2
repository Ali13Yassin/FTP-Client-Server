from karel.stanfordkarel import *

"""
Each row starts with a stack of beepers. Karel should pick them
up, one at a time, and spread them down the row. 
Caution! Karel can't count, and starts with infinite beepers in
her bag. How can you solve this puzzle?
"""


def main():
    move() #Move to the starting possition
    spread()

#Picks beeper and puts it as far as possible
def spread():
    if beepers_present():
        pick_beeper()
        #We do this again to check if we finished the beepers
        if beepers_present():
            #Move till the end of the beeper line
            while beepers_present():
                move()
            put_beeper()
            return_to_start()

        #If we finished the beepers
        else:
            put_beeper() #Returns the picked up beeper
            look_left()
            while front_is_clear():
                move()
            look_right()

#Restarts the whole proccess
def return_to_start():
    look_left()
    while front_is_clear():
        move()
    look_right()
    move()
    spread() #To stard spreading again

#A function to look east
def look_right():
    while not_facing_east():
        turn_left()

#A function to look west
def look_left():
    while not_facing_west():
        turn_left()
        

# There is no need to edit code beyond this point
if __name__ == '__main__':
    main()